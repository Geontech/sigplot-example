{"version":3,"sources":["/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/$_gendir lazy","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.component.css","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.component.html","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.component.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.module.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/material.module.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/signals/index.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/signals/noise.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/signals/signal-base.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/environments/environment.ts","/home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-toolbar.top-bar {\\n  position: fixed;\\n  top:0;\\n  z-index: 1000;\\n  border-bottom: 3pt solid rgb(160,16,4);\\n}\\n\\nmat-toolbar.bottom-bar {\\n    position: fixed;\\n    bottom:   0;\\n    overflow: hidden;\\n    min-height: 0;\\n    height:   35px;\\n}\\n\\nmat-toolbar.bottom-bar >>> mat-toolbar-row {\\n    height: 35px;\\n}\\n\\n.branding {\\n    padding-right: 16px;\\n}\\n\\n.demo-panel {\\n    width: 70%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    margin-top: 64px;\\n    margin-bottom: 35px;\\n}\\n\\n.fill-space {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n}\\n\\n\\n.sigplot-panel:after {\\n    content: \\\"\\\";\\n    display: table;\\n    clear:   both;\\n}\\n\\n.sigplot-plot {\\n    width:  80%;\\n    height: 400px;\\n    float:  left;\\n}\\n\\n.sigplot-controls {\\n    width:  20%;\\n    height: 100%;\\n    float:  left;\\n}\\n\\n.sigplot-controls button {\\n    width: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"top-bar\\\">\\n    <div class=\\\"branding\\\">\\n        <a href=\\\"http://www.geontech.com\\\" mat-icon-button class=\\\"icon-hawkeye\\\"><img style=\\\"height: 40px;\\\" src=\\\"assets/images/geon-logo-white.svg\\\"></a>\\n    </div>\\n\\n    <h1>SigPlot+Angular Demo</h1>\\n\\n    <span class=\\\"fill-space\\\"></span>\\n\\n    <span><a mat-button href=\\\"http://github.com/LGSInnovations/sigplot/tree/develop-2.0\\\">SigPlot 2.0</a></span>\\n    <span><a mat-button href=\\\"https://www.npmjs.com/package/sigplot-ts\\\">Typings Extensions</a></span>\\n    <span><a mat-button href=\\\"https://www.npmjs.com/package/sigplot-ng\\\">Angular Components</a></span>\\n</mat-toolbar>\\n\\n<div class=\\\"demo-panel\\\">\\n    <mat-tab-group>\\n        <mat-tab label=\\\"Line Plot\\\">\\n            <div class=\\\"sigplot-panel\\\">\\n                <sigplot-line\\n                    class=\\\"sigplot-plot\\\"\\n                    [colors]=\\\"colors\\\"\\n                    [data$]=\\\"linePlotData$\\\"\\n                    [highlight]=\\\"linePlotHighlight$\\\">\\n                </sigplot-line>\\n                <div class=\\\"sigplot-controls\\\">\\n                    <button mat-button (click)=\\\"toggleHighlight()\\\">Toggle Highlight</button>\\n                    <button mat-button (click)=\\\"changeLineColor()\\\">Change Color</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n\\n        <mat-tab label=\\\"Raster Plot\\\">\\n            <div class=\\\"sigplot-panel\\\">\\n                <sigplot-raster\\n                    class=\\\"sigplot-plot\\\"\\n                    [colors]=\\\"colors\\\"\\n                    [data$]=\\\"rasterPlotData$\\\"\\n                    [cmap]=\\\"rasterColorMap\\\"\\n                    [legend]=\\\"false\\\">\\n                </sigplot-raster>\\n                <div class=\\\"sigplot-controls\\\">\\n                    <button mat-button (click)=\\\"changeRasterColorMap()\\\">Change Color Map</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n\\n    <hr>\\n\\n    <div class=\\\"mat-body\\\">\\n        <p>This demo showcases a growing base set of Angular (v 4+) Components which provide simplified interfaces to the types of plots one might want for scientific data.  You can find the source for this demo <a href=\\\"http://github.com/geontech/sigplot-example\\\">here</a>, and use the links above to find SigPlot, the Typings-friendly extensions, and these Angular Components.</p>\\n\\n        <p>The plots above are driven by a signal generator producing pseudo-random noise with 2048 samples at 100 Hz.  Each plot Component has a base set of inputs as well as inputs specific to that category of plot (Line plots have highlights, etc.).  Only the base set is exposed at this time.</p>\\n\\n        <p>Check back often as the demo is likely to change as more plot types and features are exposed.  Please feel free to fork and submit pull requests as well if you have ideas for features.</p>\\n    </div>\\n</div>\\n\\n<mat-toolbar class=\\\"bottom-bar\\\">\\n    <a mat-button href=\\\"http://www.geontech.com\\\">Geon Technologies, LLC &mdash; &copy; 2017</a>\\n</mat-toolbar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Noise } from './signals';\n\nimport * as lib from 'sigplot-ts';\n\nimport {\n  HighlightCommand,\n  HighlightAction,\n  defaultLineOptions,\n  LINE_PLOT_OPTIONS\n} from 'sigplot-ng';\n\n/**\n * This is an example of how to inject custom options into a plot.\n * In this case, we are hiding the legend initially via the options rather than\n * using the component's Input.\n */\nexport function customLineOptions(): lib.ConstructorOptions {\n  const opts = defaultLineOptions();\n  opts.legend = false;\n  return opts;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [\n    // See above comments for this example\n    { provide: LINE_PLOT_OPTIONS, useFactory: customLineOptions }\n  ]\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  // colors for both plots\n  colors: lib.IPlotColors;\n\n  // Color map for the raster plot\n  rasterColorMap:     lib.Mc;\n\n  // Color array for line plot\n  lineColorList:      Array<string>;\n\n  // Observables for data, etc.\n  linePlotData$:      Observable<lib.LinePlotData>;\n  linePlotHighlight$: Observable<HighlightCommand>;\n  rasterPlotData$:    Observable<lib.RasterPlotData>;\n\n  private signal:     Noise;\n\n  private _lpdSubject:  Subject<lib.LinePlotData>;\n  private _lphSubject:  Subject<HighlightCommand>;\n  private _highlight:   HighlightCommand;\n\n  private _rpdSubject: Subject<lib.RasterPlotData>;\n\n\n  constructor() {\n    // White bg, black fg\n    this.colors = { fg: 'black', bg: 'white' };\n\n    // Pick the initial color map and setup the set of colors\n    this.rasterColorMap = lib.Mc.Greyscale;\n    this.lineColorList = [\n      'rgb(1,85,129)',\n      'rgb(160,16,4)',\n      'rgb(74,74,48)'\n      ];\n\n    // Setup the observable(s)\n    this._lpdSubject = new Subject<lib.LinePlotData>();\n    this.linePlotData$ = this._lpdSubject.asObservable();\n    this._lphSubject = new Subject<HighlightCommand>();\n    this.linePlotHighlight$ = this._lphSubject.asObservable();\n\n    this._rpdSubject = new Subject<lib.RasterPlotData>();\n    this.rasterPlotData$ = this._rpdSubject.asObservable();\n\n    // Setup signal generator\n    this.signal = new Noise();\n    this.signal.frameSize = 2048;\n    this.signal.updateRateHz = 100;\n\n    // Highlight's start/end are relative to the values being plotted, which is\n    // naturally based on the delta between sample points.\n    const delta: number = 1.0 / this.signal.updateRateHz / this.signal.frameSize;\n\n    // Setup a highlight\n    this._highlight = {\n      action: HighlightAction.remove,\n      highlight: {\n        xstart: 100.0 * delta,\n        xend:   400.0 * delta,\n        color:  'red',\n        id:     'my-highlight'\n      }\n    };\n\n    // Connect the signal stream to the plot via ...PlotData\n    this.signal.start((b) => {\n      // Line plot's data\n      const lpd: lib.LinePlotData = {\n        buffer:   b,\n        dataSize: lib.FormatSize.Scalar,\n        dataType: lib.FormatType.Float32,\n        xAxis: {\n          start: 0.0,\n          delta: delta,\n          units: lib.Units.Time\n        },\n        layerSettings: {\n          color: this.lineColorList[0]\n        }\n      };\n      this._lpdSubject.next(lpd);\n\n      // Falling raster version with y-axis data specs.\n      const rpd: lib.RasterPlotData = {\n        buffer:   b,\n        dataSize: lib.FormatSize.Scalar,\n        dataType: lib.FormatType.Float32,\n        xAxis: {\n          start: 0.0,\n          delta: delta,\n          units: lib.Units.Frequency\n        },\n        yAxis: {\n          start: 0.0,\n          units: lib.Units.Power\n        }\n      };\n      this._rpdSubject.next(rpd);\n    });\n  }\n\n  ngOnInit() {\n    this.rasterColorMap = lib.Mc.Greyscale;\n  }\n\n  toggleHighlight() {\n    if (this._highlight.action === HighlightAction.remove) {\n      this._highlight.action = HighlightAction.add;\n    } else {\n      this._highlight.action = HighlightAction.remove;\n    }\n    this._lphSubject.next(this._highlight);\n  }\n\n  changeRasterColorMap() {\n    // This method of iterating over enumerations works here since this one is\n    // defined positively from 0 without skipping.\n    if (lib.Mc[this.rasterColorMap + 1] === undefined) {\n      this.rasterColorMap = 0;\n    } else {\n      this.rasterColorMap += 1;\n    }\n  }\n\n  changeLineColor() {\n    this.lineColorList.push(this.lineColorList.shift());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SigPlotComponentsModule } from 'sigplot-ng';\n\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        MaterialModule,\n        SigPlotComponentsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/app.module.ts","import { NgModule } from '@angular/core';\n\nimport {\n    MatButtonModule,\n    MatTabsModule,\n    MatToolbarModule\n} from '@angular/material';\n\nconst MATERIAL_MODULES = [\n    MatButtonModule,\n    MatTabsModule,\n    MatToolbarModule\n    ];\n\n@NgModule({\n    imports: MATERIAL_MODULES,\n    exports: MATERIAL_MODULES\n})\nexport class MaterialModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/material.module.ts","export { Noise } from './noise';\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/signals/index.ts","import { SignalBase } from './signal-base';\n\nexport class Noise extends SignalBase {\n    getSample (v: number): number { return 2.0 * Math.random() - 1.0; }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/signals/noise.ts","type BufferCallback = ((buffer: Array<number>) => void);\n\nexport abstract class SignalBase {\n    protected _frameSize:    number;\n    protected _buffer:       Array<number>;\n    protected _callback:     BufferCallback;\n    protected _interval:     NodeJS.Timer;\n    protected _updateRateHz: number;\n    protected _period_ms:    number;\n\n    constructor() {\n        this._frameSize = 8192;\n        this._buffer = [];\n        this._callback = null;\n        this._interval = null;\n    }\n\n    set frameSize(v: number) {\n        this._frameSize = v;\n        this._updateSignal();\n    }\n\n    get frameSize(): number { return Math.round(this._frameSize); }\n\n    get started(): boolean { return (this._interval && this._callback !== null); }\n\n    set updateRateHz (v: number) {\n        this._updateRateHz = Math.round(v);\n        this._period_ms = 1000.0 / this._updateRateHz;\n\n        if (this.started) {\n            const cb: BufferCallback = this._callback;\n            this.stop();\n            this.start(cb);\n        }\n    }\n\n    get updateRateHz (): number { return this._updateRateHz; }\n\n    get period_ms (): number { return this._period_ms; }\n\n    get samplesPerSecond (): number { return this.frameSize * this.updateRateHz; }\n\n    start (callback: BufferCallback) {\n        if (!this.started) {\n            // Save the callback\n            // Set the loop interval\n            this._callback = callback;\n            this._interval = global.setInterval(() => this._loop(), this.period_ms);\n        }\n    }\n\n    stop () {\n        global.clearInterval(this._interval);\n        this._callback = null;\n        this._interval = null;\n    }\n\n  /**\n   * Calculate sample # N\n   *\n   */\n   abstract getSample(N: number): number;\n\n   protected _updateSignal (): void {\n       this._buffer.length = 0;\n       for (let i = 0; i < this.frameSize; i++) {\n           this._buffer[i] = this.getSample(i);\n       }\n   }\n\n   protected _loop () {\n       this._updateSignal();\n       this._callback(this._buffer.slice());\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/app/signals/signal-base.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /home/btgoodwin/Desktop/ar-plotting/sigplot-example/src/main.ts"],"sourceRoot":"webpack:///"}